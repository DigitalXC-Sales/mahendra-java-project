trigger:
  - master

resources:
  repositories:
    - repository: mygithubrepo
      type: github
      name: DigitalXC-Sales/mahendra-java-project
      endpoint: DigitalXC-Sales

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: Checkout
    displayName: 'Checkout Source Code'
    jobs:
      - job: CheckoutJob
        steps:
          - checkout: mygithubrepo

  - stage: Compile
    displayName: 'MVN Compile Code'
    jobs:
      - job: CompileJob
        steps:
          - task: Maven@4
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'compile'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.11'
              mavenVersionOption: 'Default'

  - stage: Test
    displayName: 'MVN Tests'
    jobs:
      - job: TestJob
        steps:
          - task: Maven@4
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'test'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.11'
              mavenVersionOption: 'Default'
              publishJUnitResults: true
              testResultsFiles: '**/surefire-reports/TEST-*.xml'

  - stage: Package
    displayName: 'Package WAR Artifact'
    jobs:
      - job: PackageJob
        steps:
          - task: Maven@4
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'clean package'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.11'
              mavenVersionOption: 'Default'

          - script: |
              echo "Listing target directory after packaging..."
              ls -lR $(System.DefaultWorkingDirectory)
            displayName: 'Post-Package Directory Tree'

  - stage: ArtifactPreparation
    displayName: 'Prepare and Publish Artifact'
    jobs:
      - job: ArtifactJob
        steps:
          - script: |
              echo "Checking for build output (target directory)..."
              ls -lR $(System.DefaultWorkingDirectory)
            displayName: 'Check Full Workspace Tree'

          - task: CopyFiles@2
            inputs:
              sourceFolder: '$(System.DefaultWorkingDirectory)'
              contents: '**/target/**/*.war'
              targetFolder: '$(Build.ArtifactStagingDirectory)'
            displayName: 'Copy WAR files to Artifact Staging Directory'

          - script: |
              echo "Final Check: Files in Artifact Staging Directory:"
              ls -lR $(Build.ArtifactStagingDirectory)
            displayName: 'List Files Before Publish'

          - task: PublishBuildArtifacts@1
            inputs:
              pathToPublish: '$(Build.ArtifactStagingDirectory)'
              artifactName: 'java-app'
              publishLocation: 'Container'
